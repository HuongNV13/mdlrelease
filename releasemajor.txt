This file include the extra steps to perform when one
new MAJOR (X.Y) release is about to be performed.

In order to procced, simply follow the steps defined
for normal weeklies and, at the given points, execute
the steps detailed in the 2 sections below:

Note, try not to copy/paste the commands but write them
as it's extremely easy to end with "X.Y" tags, branches
and friends ;-)

20110701 first version - Eloy Lafuente (stronk7)

========== ========== ========== ==========

A) STEPS FOR MAJOR RELEASE


1) Change master version.php to:

$version  = YYYYMMDD00.00;
$release  = 'X.Y (Build: YYYYMMDD)';
$maturity = MATURITY_STABLE;

2) Commit it with message "release X.Y"

3) git tag -a vX.Y.0 -m MOODLE_XY

4) git branch MOODLE_XY_STABLE

5) Change master version.php to:

$version  = YYYYMMDD00.00;
$release  = 'X.Y+1dev (Build: YYYYMMDD)';
$maturity = MATURITY_ALPHA;

6) Commit it with message "weekly release X.Y+1dev"

7) git push [integration_remote] MOODLE_XY_STABLE && git push [integration_remote] --tags

8) Add support for the new branch in all the mdlrelease scripts used (master branch only):
    - install_mirror.sh
    - gitmirror.sh
    - cvsmirror.sh
    - checkcvsmirror.sh

9) Verify integration.git looks 100% perfect before continue

10) Done! A) STEPS Ok. Go back to next step in weeklybuild.txt

========== ========== ========== ==========

B) STEPS FOR MAJOR RELEASE


1) Change to on-demand-master-only mdlrelease branch. Execute
   all the steps needed to end with CVS HEAD updated (steps 5, 6, 7, 8)

2) Switch back to master mdlrelease branch

3) Duplicate (HEAD) cvsmoodle dir to cvsmoodleXY

4) Ensure you are on HEAD updated: cd cvsmoodleXY ; cvs -q update -dPA

5) Create the MOODLE_XY_STABLE branch: cvs tag -b MOODLE_XY_STABLE

6) cvs update to the new branch: cvs -q update -dPr MOODLE_XY_STABLE

7) Create the new MOODLE_XY_STABLE branch in gitmirror repo:
    git branch MOODLE_XY_STABLE origin/MOODLE_XY_STABLE

8) Done! B) STEPS Ok. Go back to next step in weeklybuild.txt
